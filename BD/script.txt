CREATE DATABASE control_asistencia;
GO
USE control_asistencia;
GO

-- Crear tabla de regiones
CREATE TABLE regiones (
    id_region INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(100) UNIQUE NOT NULL,
    descripcion TEXT
);

-- Crear tabla de sucursales
CREATE TABLE sucursales (
    id_sucursal INT PRIMARY KEY AUTO_INCREMENT,
    id_region INT NOT NULL,
    nombre VARCHAR(100) UNIQUE NOT NULL,
    direccion TEXT NOT NULL,
    telefono VARCHAR(15) CHECK (telefono REGEXP '^[0-9]{10}$'),
    FOREIGN KEY (id_region) REFERENCES regiones(id_region) ON DELETE CASCADE
);

-- Crear tabla de oficinas
CREATE TABLE oficinas (
    id_oficina INT PRIMARY KEY AUTO_INCREMENT,
    id_sucursal INT NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    FOREIGN KEY (id_sucursal) REFERENCES sucursales(id_sucursal) ON DELETE CASCADE
);

-- Crear tabla de departamentos
CREATE TABLE departamentos (
    id_departamento INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(100) UNIQUE NOT NULL,
    descripcion TEXT
);

-- Crear tabla de cargos (puestos de trabajo)
CREATE TABLE cargos (
    id_cargo INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(100) UNIQUE NOT NULL,
    descripcion TEXT
);

-- Crear tabla de empleados
CREATE TABLE empleados (
    id_empleado INT PRIMARY KEY AUTO_INCREMENT,
    codigo VARCHAR(20) UNIQUE NOT NULL, 
    cedula VARCHAR(11) UNIQUE NOT NULL CHECK (cedula REGEXP '^[0-9]{11}$'),
    nombre VARCHAR(100) NOT NULL,
    apellido VARCHAR(100) NOT NULL,
    correo VARCHAR(100) UNIQUE NOT NULL,
    telefono VARCHAR(15) CHECK (telefono REGEXP '^[0-9]{10}$'),
    fecha_contratacion DATE NOT NULL,
    id_departamento INT,
    id_oficina INT NOT NULL,
    id_cargo INT NOT NULL,
    estado ENUM('activo', 'inactivo') DEFAULT 'activo',
    huella_biometrica BLOB,
    rostro_biometrico BLOB,
    FOREIGN KEY (id_departamento) REFERENCES departamentos(id_departamento),
    FOREIGN KEY (id_oficina) REFERENCES oficinas(id_oficina) ON DELETE CASCADE,
    FOREIGN KEY (id_cargo) REFERENCES cargos(id_cargo) ON DELETE CASCADE
);

-- Crear tabla de turnos
CREATE TABLE turnos (
    id_turno INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(50) NOT NULL,
    hora_entrada TIME NOT NULL,
    hora_salida TIME NOT NULL,
    tolerancia_minutos INT DEFAULT 5
);

-- Crear tabla de relaci√≥n entre empleados y turnos
CREATE TABLE empleado_turno (
    id_empleado INT,
    id_turno INT,
    fecha_inicio DATE NOT NULL,
    fecha_fin DATE DEFAULT NULL,
    PRIMARY KEY (id_empleado, id_turno, fecha_inicio),
    FOREIGN KEY (id_empleado) REFERENCES empleados(id_empleado) ON DELETE CASCADE,
    FOREIGN KEY (id_turno) REFERENCES turnos(id_turno) ON DELETE CASCADE
);

-- Crear tabla de asistencias
CREATE TABLE asistencias (
    id_asistencia INT PRIMARY KEY AUTO_INCREMENT,
    id_empleado INT NOT NULL,
    fecha DATE NOT NULL,
    hora_entrada TIME DEFAULT NULL,
    hora_salida TIME DEFAULT NULL,
    tipo_registro ENUM('huella', 'rostro') NOT NULL,
    estado ENUM('a tiempo', 'tarde', 'ausente') DEFAULT 'a tiempo',
    FOREIGN KEY (id_empleado) REFERENCES empleados(id_empleado) ON DELETE CASCADE
);

-- Crear tabla de permisos
CREATE TABLE permisos (
    id_permiso INT PRIMARY KEY AUTO_INCREMENT,
    id_empleado INT NOT NULL,
    fecha_inicio DATE NOT NULL,
    fecha_fin DATE NOT NULL,
    motivo TEXT NOT NULL,
    estado ENUM('pendiente', 'aprobado', 'rechazado') DEFAULT 'pendiente',
    FOREIGN KEY (id_empleado) REFERENCES empleados(id_empleado) ON DELETE CASCADE
);

-- Crear tabla de historial de faltas
CREATE TABLE historial_faltas (
    id_historial INT PRIMARY KEY AUTO_INCREMENT,
    id_empleado INT NOT NULL,
    cantidad_faltas INT DEFAULT 0,
    ultima_falta DATE DEFAULT NULL,
    motivo_ultima_falta TEXT DEFAULT NULL,
    estado_disciplinario ENUM('normal', 'advertencia', 'sancionado', 'despido') DEFAULT 'normal',
    FOREIGN KEY (id_empleado) REFERENCES empleados(id_empleado) ON DELETE CASCADE
);

-- Crear tabla de usuarios
CREATE TABLE usuarios (
    id_usuario INT PRIMARY KEY AUTO_INCREMENT,
    id_empleado INT UNIQUE NOT NULL,
    username VARCHAR(50) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    rol ENUM('administrador', 'rrhh', 'empleado') NOT NULL,
    FOREIGN KEY (id_empleado) REFERENCES empleados(id_empleado) ON DELETE CASCADE
);
